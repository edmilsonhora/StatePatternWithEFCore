// <auto-generated />
using System;
using EF_Core.DataAccess.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EF_Core.DataAccess.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("EF_Core.DomainModel.AbstractOrcamentoState", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AtualizadoPor")
                        .HasColumnType("TEXT");

                    b.Property<string>("CadastradoPor")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("OrcamentoStatus")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("OrcamentoStatusHistorico");

                    b.HasDiscriminator<int>("OrcamentoStatus");
                });

            modelBuilder.Entity("EF_Core.DomainModel.Orcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AtualizadoPor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("CadastradoPor")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Data")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataAtualizacao")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("TEXT");

                    b.Property<int>("StatusAtual")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Valor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("EF_Core.DomainModel.Aprovado", b =>
                {
                    b.HasBaseType("EF_Core.DomainModel.AbstractOrcamentoState");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("EF_Core.DomainModel.Cancelado", b =>
                {
                    b.HasBaseType("EF_Core.DomainModel.AbstractOrcamentoState");

                    b.HasDiscriminator().HasValue(4);
                });

            modelBuilder.Entity("EF_Core.DomainModel.EmAprovacao", b =>
                {
                    b.HasBaseType("EF_Core.DomainModel.AbstractOrcamentoState");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("EF_Core.DomainModel.Novo", b =>
                {
                    b.HasBaseType("EF_Core.DomainModel.AbstractOrcamentoState");

                    b.HasDiscriminator().HasValue(0);
                });

            modelBuilder.Entity("EF_Core.DomainModel.Reprovado", b =>
                {
                    b.HasBaseType("EF_Core.DomainModel.AbstractOrcamentoState");

                    b.HasDiscriminator().HasValue(3);
                });

            modelBuilder.Entity("EF_Core.DomainModel.AbstractOrcamentoState", b =>
                {
                    b.HasOne("EF_Core.DomainModel.Orcamento", null)
                        .WithMany("HistoricoStatus")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Core.DomainModel.Orcamento", b =>
                {
                    b.Navigation("HistoricoStatus");
                });
#pragma warning restore 612, 618
        }
    }
}
